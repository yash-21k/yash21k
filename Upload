import json
import uuid

# File paths
input_json_path = 'input.json'          # Your original JSON file
output_json_path = 'output.json'        # Where you want to save the updated JSON

# Step 1: Load the JSON file
with open(input_json_path, 'r', encoding='utf-8') as f:
    data = json.load(f)

# Step 2: Generate 100 new UUIDs
new_uetrs = [str(uuid.uuid4()) for _ in range(100)]
replaced_uetrs = []  # To store used UUIDs
uetr_index = 0

# Step 3: Define a recursive function to replace all 'uetr' fields
def replace_uetr(obj):
    global uetr_index
    if isinstance(obj, dict):
        for key, value in obj.items():
            if key == 'uetr' and uetr_index < len(new_uetrs):
                obj[key] = new_uetrs[uetr_index]
                replaced_uetrs.append(new_uetrs[uetr_index])
                uetr_index += 1
            else:
                replace_uetr(value)
    elif isinstance(obj, list):
        for item in obj:
            replace_uetr(item)

# Step 4: Replace UETRs
replace_uetr(data)

# Step 5: Save the updated JSON
with open(output_json_path, 'w', encoding='utf-8') as f:
    json.dump(data, f, indent=2)

# Step 6: Print replaced UETRs
print("Replaced UETRs:")
print(tuple(replaced_uetrs))