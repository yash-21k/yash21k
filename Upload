import org.junit.jupiter.api.Test;
import java.io.*;
import java.nio.file.*;
import java.util.*;

import static org.junit.jupiter.api.Assertions.assertTrue;

public class PropertiesFileValidationTest {

    @Test
    public void validateAllPropertiesFiles() throws IOException {
        Path rootDir = Paths.get("src/main/resources"); // change this if needed
        List<Path> propertyFiles = new ArrayList<>();

        Files.walk(rootDir)
                .filter(path -> path.toString().endsWith(".properties"))
                .forEach(propertyFiles::add);

        boolean allValid = true;

        for (Path path : propertyFiles) {
            System.out.println("Validating: " + path);
            try (InputStream in = Files.newInputStream(path)) {
                Properties props = new Properties();
                props.load(in);  // this throws an IOException on invalid format
            } catch (IOException e) {
                allValid = false;
                System.err.println("  [Error] File: " + path);
                System.err.println("  " + e.getMessage());
            }
        }

        assertTrue(allValid, "One or more .properties files have syntax errors.");
    }
}